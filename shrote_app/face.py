import face_recognition
import cv2
import numpy as np


def recognize():

    names = []
    #alok_image = face_recognition.load_image_file("photos/alok.jpg")
    #alok_encoding = face_recognition.face_encodings(alok_image)[0]
    alok_encoding = [-0.19551834, 0.15074679, 0.04783491, -0.06183498, -0.05131555, -0.03187121, -0.04401284, -0.03610272, 0.22142527, -0.10223802, 0.19669016, -0.07927294, -0.158911, -0.0548551, -0.0325137, 0.07473488, -0.10737398, -0.17968951, 0.00475106, -0.11311112, 0.02673112, 0.02783626, -0.06030912, 0.11492103, -0.19042286, -0.33450949, -0.03945437, -0.17202982, -0.00757867, -0.17197286, -0.06251004, 0.08781326, -0.20764433, -0.06233966, -0.02453049, 0.15661705, 0.07951317, 0.02469599, 0.12336226, -0.02374347, -0.10101537, -0.04363482, 0.0584182, 0.30766326, 0.11321457, 0.02291921, 0.00798558, -0.00453461, 0.11272512, -0.18325746, 0.05530166, 0.10782557, 0.10588045, 0.00576222, 0.08881109, -0.14999121, -0.01574365, 0.00779151, -0.17843987, 0.09790605, 0.04605109, -0.00510281, -0.1009791, 0.00578126, 0.19968723, 0.13342033, -0.04270919, -0.13806331, 0.15929906, -0.1745311, -0.01418588, 0.10355435, -0.06487982, -0.14978668, -0.1857105, 0.07672247, 0.39254653, 0.11898614, -0.14493574, 0.08880713, -0.0484456, -0.08751302, 0.04288826, -0.0162568, -0.12955451, 0.07935524, -0.1265157, 0.14483359, 0.23331647, 0.08860064, -0.01231977, 0.11088387, -0.03461502, 0.00990006, 0.04438433, 0.03635687, -0.10920428, 0.01496206, -0.12040781, -0.01270082, 0.10218398, -0.06884015, -0.08411431, 0.09783532, -0.21494067, 0.08779991, -0.01374504, -0.07165778, -0.09059469, 0.09300002, -0.11833304, -0.00072942, 0.16059223, -0.20423399, 0.1284508, 0.10451623, 0.00540917, 0.14771082, 0.03671379, -0.00419952, 0.07154132, -0.04291127, -0.13481182, -0.11689758, 0.05225527, -0.05595541, 0.07083724, 0.02169109]



    #gourav_image = face_recognition.load_image_file("photos/gourav.jpg")
    #gourav_encoding = face_recognition.face_encodings(gourav_image)[0]
    gourav_encoding = [-0.18003757, 0.09057029, 0.06325153, 0.02572952, -0.02299697, -0.08112492,
                       -0.03691193, -0.0183793, 0.17109483, -0.07407024, 0.28841156, -0.02650414,
                       -0.24916649, -0.10613684, -0.05229621, 0.09672522, -0.08806733, -0.10030577,
                       0.00931101, -0.04145236, 0.08503556, 0.02120329, 0.01947578, 0.04564374,
                       -0.08319746, -0.38820291, -0.0707296, -0.15288478, 0.01026688, -0.05455668,
                       -0.04270019, 0.0429384, -0.16778563, -0.07972889, 0.01901329, 0.11330052,
                       -0.06861687, -0.00230316, 0.21939327, -0.01209174, -0.12935029, -0.12308645,
                       0.00651399, 0.29942736, 0.03654749, 0.07011901, 0.04315049, -0.06934104,
                       0.07956766, -0.18671587, 0.05738655, 0.17406043, 0.17711109, 0.05470395,
                       0.11382757, -0.17810284, 0.06510328, 0.02570018, -0.18935525, 0.05296465,
                       0.00902229, -0.03233743, -0.02645804, -0.03034876, 0.26030096, 0.068091,
                       -0.06640925, -0.10616698, 0.22122335, -0.12145354, 0.00613161, 0.14241041,
                       -0.09794412, -0.24208741, -0.20970272, 0.05777193, 0.38222054, 0.1349276,
                       -0.10905018, 0.04707299, -0.09808879, -0.08435569, 0.06054845, 0.01099898,
                       -0.11635824, 0.06810572, -0.14754401, 0.03726126, 0.17682518, -0.04143484,
                       -0.03580394, 0.13507105, -0.00595191, 0.06482823, 0.05544207, -0.02477874,
                       -0.07248824, 0.05731365, -0.11249239, 0.01582329, 0.09241787, -0.149729,
                       -0.00962473, 0.03464025, -0.17841904, 0.01684902, 0.02243071, -0.04310572,
                       -0.0235473, 0.06013414, -0.20759524, -0.06953, 0.13577121, -0.25784516,
                       0.24848941, 0.12676471, 0.05627907, 0.18088703, 0.08361463, 0.05216419,
                       0.00163595, -0.12208241, -0.14945571, -0.08676043, 0.06072644, 0.01516613,
                       0.03693863, 0.00973731]



    known_face_encoding = [
        alok_encoding,
        gourav_encoding
    ]

    known_faces_names = [
        "Alok Pandey",
        "Gourav Kumar"
    ]

    students = known_faces_names.copy()

    face_locations = []
    face_encodings = []
    face_names = []
    s = True

    frame = cv2.imread('static/detected_frame.jpg')


    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
    rgb_small_frame = np.ascontiguousarray(small_frame[:, :, ::-1])

    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

    face_names = []
    for face_encoding in face_encodings:
        matches = face_recognition.compare_faces(known_face_encoding, face_encoding)
        name = ""
        face_distance = face_recognition.face_distance(known_face_encoding, face_encoding)
        best_match_index = np.argmin(face_distance)
        if matches[best_match_index]:
            name = known_faces_names[best_match_index]

        names.append(name)


    return names

